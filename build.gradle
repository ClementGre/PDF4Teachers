/*
 * Copyright (c) 2021. Clément Grennerat
 * All rights reserved. You must refer to the licence Apache 2.
 */

plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.24.0'
    id 'idea'
//    id 'com.dua3.javafxgradle7plugin' version '0.0.9'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id "de.jjohannes.extra-java-module-info" version "0.8"
    id 'com.gluonhq.gluonfx-gradle-plugin' version '1.0.8'
}

repositories {
    mavenCentral()
    maven { url "https://clojars.org/repo" }
    maven { url "https://nexus.gluonhq.com/nexus/content/repositories/releases/" }
    flatDir {
        dirs 'locallibs'
    }
}

extraJavaModuleInfo {
    failOnMissingModuleInfo.set(false)

    automaticModule("jlatexmath-1.0.7.jar", "jlatexmath")
    automaticModule("writer2latex.jar", "writertolatex")

    automaticModule("jlatexmath-font-greek-1.0.7.jar", "jlatexmath.font.greek")
    automaticModule("jlatexmath-font-cyrillic-1.0.7.jar", "jlatexmath.font.cyrillic")

    automaticModule("xmpcore-6.0.6.jar", "xmpcore")

    automaticModule("metadata-extractor-2.16.0.jar", "metadata.extractor")

    automaticModule("commons-logging-1.2.jar", "commons.logging")

    automaticModule("jai-imageio-core-1.4.0.jar", "imageio.core")
    automaticModule("jai-imageio-jpeg2000-1.4.0.jar", "jai.imageio.jpeg2000")

    automaticModule("batik-parser-1.14.jar", "batik.parser")

    automaticModule("google-diff-match-patch-0.1.jar", "google.diffmatchpatch")
    automaticModule("unique4j-1.4.jar", "uniqueforj")

}

dependencies {

    // Gluon
//    implementation "com.gluonhq:charm-glisten:6.1.0"

    implementation 'org.jetbrains:annotations:22.0.0'

    // JAVA FX //
    implementation(group: 'org.jfxtras', name: 'jmetro', version: '11.6.15') {
        exclude group: 'org.openjfx'
    }
    // ControlsFX
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.0'

    // Support special images format when render a PDF
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-core', version: '1.4.0'
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-jpeg2000', version: '1.4.0'
    implementation group: 'org.apache.pdfbox', name: 'jbig2-imageio', version: '3.0.3'

    // Signing and encrypting pdf (not used)
    //compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.53'

    // Image IO - EXIF
    implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.16.0'

    // JSON requests
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    // YAML
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.29'
    // LaTeX
    implementation 'org.scilab.forge:jlatexmath:1.0.7'
    implementation(name: 'writer2latex', ext: 'jar')

    // OSX
    implementation 'de.jangassen:nsmenufx:3.1.0'

    // SVG
    implementation group: 'org.apache.xmlgraphics', name: 'batik-parser', version: '1.14'
    implementation group: 'de.rototor.pdfbox', name: 'graphics2d', version: '0.33'

    // PDF Box
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'

    // Text Google diff / match / patch
    implementation group: 'google-diff-match-patch', name: 'google-diff-match-patch', version: '0.1'

    // Unique4J
    implementation 'tk.pratanumandal:unique4j:1.4'

}

javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.fxml']
}

def os = org.gradle.internal.os.OperatingSystem.current()

version = "1.3.0"
description = "PDF students assessments editor"

//frenchDescription="Éditeur de copies PDF"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
mainClassName = "fr.clementgre.pdf4teachers/fr.clementgre.pdf4teachers.Main"

application {
    mainModule.set('fr.clementgre.pdf4teachers')
    mainClass.set('fr.clementgre.pdf4teachers.Main')
}

// Xlint check
/*gradle.projectsEvaluated {
    tasks.withType(JavaCompile){
        options.compilerArgs << "-Xlint:unchecked"
    }
}*/

run {
    jvmArgs = [
            '--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls',
            '--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls'
    ]
    if (os.macOsX) {
        // The dock icon works only when app is in /Applications
        jvmArgs += '-Xdock:icon=/Applications/PDF4Teachers.app/Contents/Resources/logo.icns'
    }
}

jlink {
    options = [
            '--strip-debug',
            '--compress', '2',
            '--no-header-files',
            '--no-man-pages'
    ] as List<String>
    launcher {
        name = 'PDF4Teachers'
        jvmArgs = [
                '--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls',
                '--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls'
        ]
        if (os.macOsX) {
            // The dock icon works only when app is in /Applications
            jvmArgs += '-Xdock:icon=/Applications/PDF4Teachers.app/Contents/Resources/logo.icns'
        }
    }

    String jdkPath = project.findProperty('jdkPath')
    String platform = os.windows ? 'win' : (os.macOsX ? 'mac' : 'lin')

    if (jdkPath != null) { // Use ./gradlew jpackage -PjdkPath=xxx
        System.out.println("Using JDK passed in property: ".concat(jdkPath))
        javaHome.set(jdkPath)

    } else {
        if (os.windows) javaHome.set('C:\\Program Files\\AdoptOpenJDK\\jdk-16.0.1.9-hotspot')
        else if (os.macOsX) javaHome.set('/Library/Java/JavaVirtualMachines/adopt-openjdk-16.0.1/Contents/Home')
        else if (os.linux) javaHome.set('/opt/jdk-16.0.2+7')
        System.out.println("Using JDK: ".concat(javaHome.get()))
    }

    targetPlatform(platform, javaHome.get())

    jpackage {
        targetPlatformName = platform

        installerType = os.windows ? 'msi' : (os.macOsX ? 'dmg' : 'deb')
        installerOptions = [
                '--description', project.description,
                '--copyright', 'Copyrigth 2019 Clément Grennerat',
                '--app-version', project.version,
                '--vendor', "Clément Grennerat",
                '--type', installerType
        ] as List<String>

        if (os.windows) { // WINDOWS
            imageOptions += ['--icon', 'src/main/resources/logo.ico']
            installerOptions += [
                    '--win-dir-chooser',
                    '--win-menu',
                    '--win-shortcut',
                    '--win-menu-group', '',
                    '--file-associations', 'distribution/windows/association-win.properties'
            ]
        } else if (os.macOsX) { // MAC
            imageOptions += ['--icon', 'src/main/resources/logo.icns']
            installerOptions += [
                    "--mac-package-name", "PDF4Teachers"
            ]
        } else if (os.linux) { // LINUX
            imageOptions += ['--icon', 'src/main/resources/logo.png']
            installerOptions += [
                    '--linux-menu-group', 'Education;Office',
                    '--linux-shortcut',
                    '--file-associations', 'distribution/linux/association-lin.properties'
            ]
            if (installerType == 'deb') installerOptions += ['--linux-deb-maintainer', 'clement.grennerat@free.fr']
            else if (installerType == 'rpm') installerOptions += ['--linux-rpm-license-type', 'Apache-2.0']
        }
    }
}


task androidRun(type: Exec) {

    def adb = "/home/clement/bin/platform-tools/adb"

    def dotIndex = mainClassName.lastIndexOf('.')
    if (dotIndex != -1) {
        def packageName = mainClassName[0..<dotIndex]
        commandLine "$adb", 'shell', 'am', 'start', '-n', "$packageName"
    }

}

gluonfx {
    target = "host"
    //target = "android"

    attachConfig {
        version = "4.0.10"
        services 'display', 'lifecycle', 'statusbar', 'storage'
    }

    bundlesList = []
    resourcesList = []
    reflectionList = []
    jniList = []

    compilerArgs = ['--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls']
    runtimeArgs = ['--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls']

    javaStaticSdkVersion = "18-ea+2"
    javafxStaticSdkVersion = "18-ea+2"
    graalvmHome = "/home/clement/bin/graalvm-ce-java17-22.0.0-dev"

    verbose = false
    enableSwRendering = false

    /*remoteHostName = ""
    remoteDir = ""*/

    release {
        // Android
        appLabel = "PDF4Teachers"
        versionCode = "1"
        versionName = "1.3.1"
        /*providedKeyStorePath = ""
        providedKeyStorePassword = ""
        providedKeyAlias = ""
        providedKeyAliasPassword = ""*/

        // iOS
        /*bundleName = ""
        bundleVersion = ""
        bundleShortVersion = ""
        providedSigningIdentity = ""
        providedProvisioningProfile = ""
        skipSigning = false*/
    }
}


